# Souffle - A Datalog Compiler
# Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at:
# - https://opensource.org/licenses/UPL
# - <souffle root>/licenses/SOUFFLE-UPL.txt

dnl Positive test cases for evaluating Datalog programs

POSITIVE_TEST([sum-aggregate],[evaluation])
POSITIVE_TEST([access-policy],[evaluation])
POSITIVE_TEST([access1],[evaluation])
POSITIVE_TEST([access2],[evaluation])
POSITIVE_TEST([access3],[evaluation])
POSITIVE_TEST([cprog1],[evaluation])
POSITIVE_TEST([cprog2],[evaluation])
POSITIVE_TEST([cprog3],[evaluation])
POSITIVE_TEST([cprog4],[evaluation])
POSITIVE_TEST([cprog5],[evaluation])
POSITIVE_TEST([po1],[evaluation])
POSITIVE_TEST([po2],[evaluation])
POSITIVE_TEST([po3],[evaluation])
POSITIVE_TEST([po4],[evaluation])
POSITIVE_TEST([po5],[evaluation])
POSITIVE_TEST([ranpo],[evaluation])
POSITIVE_TEST([number_constants],[evaluation])
POSITIVE_TEST([multiple_heads],[evaluation])
POSITIVE_TEST([arithm],[evaluation])
POSITIVE_TEST([metro],[evaluation])
POSITIVE_TEST([subtype],[evaluation])
POSITIVE_TEST([subtype2],[evaluation])
POSITIVE_TEST([aliases],[evaluation])
POSITIVE_TEST([unpacking],[evaluation])
POSITIVE_TEST([flights],[evaluation])
POSITIVE_TEST([linksum],[evaluation])
POSITIVE_TEST([tree],[evaluation])
POSITIVE_TEST([family],[evaluation])
POSITIVE_TEST([counter],[evaluation])
POSITIVE_TEST([plus],[evaluation])
POSITIVE_TEST([cat],[evaluation])
POSITIVE_TEST([ordinals],[evaluation])
POSITIVE_TEST([func],[evaluation])
POSITIVE_TEST([match3],[evaluation])
POSITIVE_TEST([match2],[evaluation])
POSITIVE_TEST([match],[evaluation])
POSITIVE_TEST([contains],[evaluation])
POSITIVE_TEST([x9],[evaluation])
POSITIVE_TEST([rsg],[evaluation])
POSITIVE_TEST([clique],[evaluation])
POSITIVE_TEST([ship],[evaluation])
POSITIVE_TEST([small],[evaluation])
POSITIVE_TEST([graph],[evaluation])
POSITIVE_TEST([grad],[evaluation])
POSITIVE_TEST([grammar],[evaluation])
POSITIVE_TEST([mrtc],[evaluation])
POSITIVE_TEST([paths],[evaluation])
POSITIVE_TEST([puzzle],[evaluation])
POSITIVE_TEST([recursion],[evaluation])
POSITIVE_TEST([relop],[evaluation])
POSITIVE_TEST([binop],[evaluation])
POSITIVE_TEST([facts],[evaluation])
POSITIVE_TEST([cproject],[evaluation])
POSITIVE_TEST([tc],[evaluation])
POSITIVE_TEST([mutrecursion],[evaluation])
POSITIVE_TEST([empty_relations],[evaluation])
POSITIVE_TEST([neg1],[evaluation])
POSITIVE_TEST([neg2],[evaluation])
POSITIVE_TEST([neg3],[evaluation])
POSITIVE_TEST([neg4],[evaluation])
POSITIVE_TEST([neg5],[evaluation])
POSITIVE_TEST([neg6],[evaluation])
POSITIVE_TEST([dnf],[evaluation])
POSITIVE_TEST([indirect_negation],[evaluation])
POSITIVE_TEST([game2],[evaluation])
POSITIVE_TEST([orbits],[evaluation])
POSITIVE_TEST([orbits1],[evaluation])
POSITIVE_TEST([rmut],[evaluation])
POSITIVE_TEST([rmut2],[evaluation])
POSITIVE_TEST([cliquer],[evaluation])
POSITIVE_TEST([pointsto],[evaluation])
POSITIVE_TEST([ackermann],[evaluation])
POSITIVE_TEST([equal],[evaluation])
POSITIVE_TEST([fib],[evaluation])
POSITIVE_TEST([list],[evaluation])
POSITIVE_TEST([minmax],[evaluation])
POSITIVE_TEST([mul],[evaluation])
POSITIVE_TEST([prime],[evaluation])
POSITIVE_TEST([prime2],[evaluation])
POSITIVE_TEST([dfa_live_vars],[evaluation])
POSITIVE_TEST([cba_expr_value],[evaluation])
POSITIVE_TEST([traces],[evaluation])
POSITIVE_TEST([turing1],[evaluation])
POSITIVE_TEST([tic-tac-toe],[evaluation])
POSITIVE_TEST([palindrome],[evaluation])
POSITIVE_TEST([sequences],[evaluation])
POSITIVE_TEST([set_ops],[evaluation])
POSITIVE_TEST([rec_lists],[evaluation])
POSITIVE_TEST([rec_lists2],[evaluation])
POSITIVE_TEST([components],[evaluation])
POSITIVE_TEST([components1],[evaluation])
POSITIVE_TEST([components2],[evaluation])
POSITIVE_TEST([components3],[evaluation])
POSITIVE_TEST([components_generic],[evaluation])
POSITIVE_TEST([strategies],[evaluation])
POSITIVE_TEST([aggregates],[evaluation])
POSITIVE_TEST([aggregates2],[evaluation])
POSITIVE_TEST([trans],[evaluation])
POSITIVE_TEST([index],[evaluation])
POSITIVE_TEST([term],[evaluation])
POSITIVE_TEST([dominance],[evaluation])
POSITIVE_TEST([dfa_summary_function],[evaluation])
POSITIVE_TEST([dfa],[evaluation])
POSITIVE_TEST([java-pointsto],[evaluation]) 
POSITIVE_MULTI_TEST([nfsa2fsa],[evaluation], [[ex1], [ex2]])
POSITIVE_TEST([comp-parametrized],[evaluation])
POSITIVE_TEST([comp-parametrized-inherit],[evaluation])
POSITIVE_TEST([comp-parametrized-multilvl],[evaluation])
POSITIVE_TEST([comp-override1],[evaluation])
POSITIVE_TEST([comp-override2],[evaluation])
POSITIVE_TEST([comp-override3],[evaluation])
POSITIVE_TEST([andersen],[evaluation])
POSITIVE_TEST([lubm],[evaluation])
POSITIVE_TEST([hmmer],[evaluation])
POSITIVE_TEST([catalan],[evaluation])
POSITIVE_TEST([factorial],[evaluation])
POSITIVE_TEST([hex],[evaluation])
POSITIVE_MULTI_TEST([lucas],[evaluation],[[fibonacci], [lucas], [mersenne], [pell]])
POSITIVE_TEST([tak],[evaluation])
POSITIVE_TEST([nqueens],[evaluation])
POSITIVE_TEST([count_sccs],[evaluation])
POSITIVE_TEST([array],[evaluation])
POSITIVE_TEST([cellular_automata],[evaluation])
POSITIVE_TEST([grid],[evaluation])
POSITIVE_TEST([minesweeper],[evaluation])
POSITIVE_TEST([range],[evaluation])
POSITIVE_TEST([topological_ordering],[evaluation])
POSITIVE_TEST([movies],[evaluation])
POSITIVE_TEST([weighted_distances],[evaluation])
POSITIVE_TEST([trains],[evaluation])
POSITIVE_TEST([triangle],[evaluation])
POSITIVE_TEST([recipies],[evaluation])
POSITIVE_TEST([circuit_eval],[evaluation])
POSITIVE_TEST([circuit_records],[evaluation])
POSITIVE_TEST([circuit_sat],[evaluation])
POSITIVE_TEST([factoring],[evaluation])
POSITIVE_TEST([perfect_numbers],[evaluation])
POSITIVE_TEST([simple],[evaluation])
POSITIVE_TEST([shortest_path],[evaluation])
POSITIVE_TEST([shortest_edges],[evaluation])
POSITIVE_TEST([degree],[evaluation])
POSITIVE_TEST([highest_degree],[evaluation])
POSITIVE_TEST([disconnected],[evaluation])
POSITIVE_TEST([double_tree],[evaluation])
# TODO (see issue #298) POSITIVE_TEST([math], [evaluation])
