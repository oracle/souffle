# Souffle - A Datalog Compiler
# Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at:
# - https://opensource.org/licenses/UPL
# - <souffle root>/licenses/SOUFFLE-UPL.txt

NEGATIVE_TEST([attrib_dupl],[semantic])
NEGATIVE_TEST([fact_arity],[semantic])
NEGATIVE_TEST([fact_cat],[semantic])
NEGATIVE_TEST([fact_ctr],[semantic])
NEGATIVE_TEST([fact_empty],[semantic])
NEGATIVE_TEST([fact_number],[semantic])
NEGATIVE_TEST([fact_number2],[semantic])
NEGATIVE_TEST([fact_plus],[semantic])
NEGATIVE_TEST([fact_variable],[semantic])
NEGATIVE_TEST([number_constants],[semantic])
NEGATIVE_TEST([record_null],[semantic])
NEGATIVE_TEST([rel_dupl],[semantic])
NEGATIVE_TEST([rel_udef],[semantic])
NEGATIVE_TEST([rel_record],[semantic])
NEGATIVE_TEST([rel_stratification],[semantic])
NEGATIVE_TEST([rel_stratification2],[semantic])
NEGATIVE_TEST([rule_arity],[semantic])
NEGATIVE_TEST([rule_grounded],[semantic])
NEGATIVE_TEST([rule_typecompat],[semantic])
NEGATIVE_TEST([rule_undeclared_relation],[semantic])
NEGATIVE_TEST([rule_undeclared_relation2],[semantic])
NEGATIVE_TEST([type_dupl],[semantic])
NEGATIVE_TEST([type_udef],[semantic])
NEGATIVE_TEST([underscore],[semantic])
NEGATIVE_TEST([execution_plan],[semantic])
NEGATIVE_TEST([comp_name_resolution],[semantic])
NEGATIVE_TEST([comp_clauses],[semantic])
NEGATIVE_TEST([comp_types],[semantic])
NEGATIVE_TEST([comp_relation],[semantic])
NEGATIVE_TEST([agg_checks],[semantic])
NEGATIVE_TEST([agg_checks2],[semantic])
NEGATIVE_TEST([var_single],[semantic])
NEGATIVE_TEST([plan1],[semantic])
NEGATIVE_TEST([plan2],[semantic])
NEGATIVE_TEST([comp_nonexistent_type],[semantic])
NEGATIVE_TEST([comp_params_inheritance],[semantic])
NEGATIVE_TEST([comp_override],[semantic])
NEGATIVE_TEST([comp_infinite_recursion],[semantic])
NEGATIVE_TEST([choice],[semantic])
NEGATIVE_TEST([disjoint_names],[semantic])
NEGATIVE_TEST([type_system1],[semantic])
NEGATIVE_TEST([type_system2],[semantic])
# TODO (see issue #231) NEGATIVE_TEST([divide_by_zero], [semantic])
POSITIVE_TEST([lrg_attr_id],[semantic])
POSITIVE_TEST([lrg_rel_id1],[semantic])
POSITIVE_TEST([lrg_rel_id2],[semantic])
POSITIVE_TEST([bitwise],[semantic])
POSITIVE_TEST([load2],[semantic])
POSITIVE_TEST([load3],[semantic])
POSITIVE_TEST([load4],[semantic])
POSITIVE_TEST([load6],[semantic])
POSITIVE_TEST([store],[semantic])
POSITIVE_TEST([store2],[semantic])
POSITIVE_TEST([records],[semantic])
POSITIVE_TEST([records1],[semantic])
POSITIVE_TEST([records2],[semantic])
POSITIVE_TEST([records3],[semantic])
POSITIVE_TEST([records4],[semantic])
POSITIVE_TEST([records5],[semantic])
POSITIVE_TEST([records6],[semantic])
POSITIVE_TEST([hex],[semantic])
POSITIVE_TEST([bin],[semantic])
POSITIVE_TEST([binhex],[semantic])
POSITIVE_TEST([rel_copy_cycles],[semantic])
POSITIVE_TEST([rel_nullary],[semantic])
POSITIVE_TEST([underscore2],[semantic])
POSITIVE_TEST([alias],[semantic])
POSITIVE_TEST([ip],[semantic])
POSITIVE_TEST([duplicates],[semantic])
POSITIVE_TEST([equivalent],[semantic])
POSITIVE_TEST([rqualifiers],[semantic])
POSITIVE_TEST([negative_numbers],[semantic])
POSITIVE_TEST([string_len],[semantic])
