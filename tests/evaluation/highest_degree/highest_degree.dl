// Find the highest in and out degree nodes in the graph
.type Node

.decl Edge(n:Node, m:Node, w:number) input

.decl OutDegree(n:Node, l:number)
OutDegree(x, l) :- Edge(x, _, _), l = sum 1 : Edge(x, _, _).

.decl InDegree(n:Node, l:number)
InDegree(x, l) :- Edge(_, x, _), l = sum 1 : Edge(_, x, _).

.decl HighestOutDegree(d:number) output
HighestOutDegree(d) :- OutDegree(_, _), d = max D : OutDegree(_, D).

.decl HighestInDegree(d:number) output
HighestInDegree(d) :- InDegree(_, _), d = max D : InDegree(_, D).

